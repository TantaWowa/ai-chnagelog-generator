name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version (e.g., 1.2.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for changelog generation

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: Update version in package.json
      run: npm version ${{ inputs.version }} --no-git-tag-version --no-commit-hooks

    - name: Generate changelog
      run: |
        # Set up git for changelog generation
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        # Get the previous version tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")

        if [ -n "$PREVIOUS_TAG" ]; then
          echo "Generating changelog from $PREVIOUS_TAG to HEAD"
          npm run start -- --from $PREVIOUS_TAG --write
        else
          echo "Generating changelog for initial release"
          npm run start -- --write
        fi
      env:
        XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    - name: Commit version and changelog
      run: |
        git add package.json package-lock.json CHANGELOG.md
        git commit -m "chore: release v${{ inputs.version }}"
        git tag v${{ inputs.version }}

    - name: Push changes and tags
      run: |
        git push origin HEAD
        git push origin v${{ inputs.version }}

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ inputs.version }}
        release_name: Release v${{ inputs.version }}
        body: |
          ## What's Changed

          See [CHANGELOG.md](CHANGELOG.md) for details.

          ### Installation

          ```bash
          npm install @tantawowa/ai-changelog-generator@${{ inputs.version }}
          ```
        draft: false
        prerelease: false